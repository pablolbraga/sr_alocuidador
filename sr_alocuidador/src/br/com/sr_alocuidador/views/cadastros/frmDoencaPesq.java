/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sr_alocuidador.views.cadastros;

import br.com.sr_alocuidador.daos.CategoriaDoencaDAO;
import br.com.sr_alocuidador.daos.DoencaDAO;
import br.com.sr_alocuidador.helpers.Uteis;
import br.com.sr_alocuidador.models.CategoriaDoenca;
import br.com.sr_alocuidador.models.Doenca;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author plima
 */
public class frmDoencaPesq extends javax.swing.JDialog {

    private List<CategoriaDoenca> listaCategoriaDoenca;
    private DefaultTableModel modelo = null;
    private CategoriaDoencaDAO daoCategDoenca;
    private DoencaDAO daoDoenca;
    
    /**
     * Creates new form frmDoencaPesq
     */
    public frmDoencaPesq(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnIncluir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        pnlFiltro = new javax.swing.JPanel();
        lblFiltroCategoria = new javax.swing.JLabel();
        cmbFiltroCategoria = new javax.swing.JComboBox<>();
        btnPesquisar = new javax.swing.JButton();
        lblLimparFiltro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Doenças");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnIncluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, -1));

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 90, -1));

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 90, -1));

        pnlFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));
        pnlFiltro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFiltroCategoria.setText("Categoria:");
        pnlFiltro.add(lblFiltroCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        pnlFiltro.add(cmbFiltroCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 280, -1));

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        pnlFiltro.add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        lblLimparFiltro.setText("Limpar Filtro");
        lblLimparFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblLimparFiltroActionPerformed(evt);
            }
        });
        pnlFiltro.add(lblLimparFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        getContentPane().add(pnlFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 560, 100));

        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Categoria", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResultado.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblResultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblResultado);
        if (tblResultado.getColumnModel().getColumnCount() > 0) {
            tblResultado.getColumnModel().getColumn(0).setMinWidth(100);
            tblResultado.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblResultado.getColumnModel().getColumn(0).setMaxWidth(100);
            tblResultado.getColumnModel().getColumn(1).setMinWidth(400);
            tblResultado.getColumnModel().getColumn(1).setPreferredWidth(400);
            tblResultado.getColumnModel().getColumn(1).setMaxWidth(400);
            tblResultado.getColumnModel().getColumn(2).setMinWidth(600);
            tblResultado.getColumnModel().getColumn(2).setPreferredWidth(600);
            tblResultado.getColumnModel().getColumn(2).setMaxWidth(600);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 1140, 440));

        setSize(new java.awt.Dimension(1203, 683));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        incluir();
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        alterar();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this, "Deseja excluir o registro?", "Exclusão", JOptionPane.YES_NO_OPTION);
        if (resposta == 0){
            excluir();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tblResultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultadoMouseClicked
        if (evt.getClickCount() == 2){
            alterar();
        }
    }//GEN-LAST:event_tblResultadoMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        daoCategDoenca = new CategoriaDoencaDAO();
        modelo = (DefaultTableModel)tblResultado.getModel(); 
        PreencherCategoriaDoenca();
        cmbFiltroCategoria.setSelectedIndex(-1);
    }//GEN-LAST:event_formWindowOpened

    private void lblLimparFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblLimparFiltroActionPerformed
        LimparFiltro();
    }//GEN-LAST:event_lblLimparFiltroActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        Pesquisar();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDoencaPesq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDoencaPesq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDoencaPesq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDoencaPesq.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmDoencaPesq dialog = new frmDoencaPesq(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox<Object> cmbFiltroCategoria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFiltroCategoria;
    private javax.swing.JButton lblLimparFiltro;
    private javax.swing.JPanel pnlFiltro;
    private javax.swing.JTable tblResultado;
    // End of variables declaration//GEN-END:variables

    private void PreencherCategoriaDoenca() {
        try {           
            
            cmbFiltroCategoria.removeAllItems();
            listaCategoriaDoenca = daoCategDoenca.ListarTodos();
            for(CategoriaDoenca c : listaCategoriaDoenca){
                cmbFiltroCategoria.addItem(c);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro de sql: " + ex.toString());
        }
    }

    private void incluir() {
        frmDoencaCad f = new frmDoencaCad(null, rootPaneCheckingEnabled);
        f.xcodigo = 0;
        f.setVisible(true);
    }

    private void excluir() {
        if (Uteis.linhaSelecionada(tblResultado)){
            try {
                daoCategDoenca.Excluir(Integer.parseInt(tblResultado.getValueAt(tblResultado.getSelectedRow(), 0).toString()));
                Pesquisar();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro de sql: " + ex.toString());
            }
        }
    }

    private void alterar() {
        if (!Uteis.linhaSelecionada(tblResultado)){
        } else {
            frmDoencaCad f = new frmDoencaCad(null, rootPaneCheckingEnabled);
            f.xcodigo = Integer.parseInt(tblResultado.getValueAt(tblResultado.getSelectedRow(), 0).toString());
            f.setVisible(true);
        }
    }

    private void LimparFiltro() {
        cmbFiltroCategoria.setSelectedIndex(-1);
    }

    private void Pesquisar() {
        
        try {
            int xcateg = 0;
            if (cmbFiltroCategoria.getSelectedIndex() >= 0){            
                xcateg = ((CategoriaDoenca)cmbFiltroCategoria.getSelectedItem()).getCodigo();           
            }    

            List<Doenca> listaDoenca = daoDoenca.ListarTodos(xcateg);
            modelo.setNumRows(0);
            for(int i = 0; i < listaDoenca.size(); i++){
                modelo.addRow(new Object[]{listaDoenca.get(i).getCodigo(), listaDoenca.get(i).getCategoriadoenca().getNome(), listaDoenca.get(i).getNome()});
            }
             
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro de sql: " + ex.toString());
        }
    }
}
