/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sr_alocuidador.views.cadastros;

import br.com.sr_alocuidador.daos.CategoriaDoencaDAO;
import br.com.sr_alocuidador.daos.DoencaDAO;
import br.com.sr_alocuidador.models.CategoriaDoenca;
import br.com.sr_alocuidador.models.Doenca;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author plima
 */
public class frmDoencaCad extends javax.swing.JDialog {

    public int xcodigo;
    private List<CategoriaDoenca> listaCategoriaDoenca;
    private DoencaDAO daoDoenca;
    private CategoriaDoencaDAO daoCategDoenca;
    
    /**
     * Creates new form frmDoencaCad
     */
    public frmDoencaCad(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblCategoriaDoenca = new javax.swing.JLabel();
        cmbCategoriaDoenca = new javax.swing.JComboBox<>();
        btnGravar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Doença");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNome.setText("Nome:");
        getContentPane().add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 490, -1));

        lblCategoriaDoenca.setText("Categoria:");
        getContentPane().add(lblCategoriaDoenca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        getContentPane().add(cmbCategoriaDoenca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 310, -1));

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGravar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        setSize(new java.awt.Dimension(546, 265));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        daoDoenca = new DoencaDAO();
        PreencherCategoriaDoenca();
        cmbCategoriaDoenca.setSelectedIndex(-1);
        Pesquisar();
    }//GEN-LAST:event_formWindowOpened

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        if (validaDados())
            gravar();
    }//GEN-LAST:event_btnGravarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmDoencaCad dialog = new frmDoencaCad(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void Pesquisar(){
        try {
            Doenca doenca = daoDoenca.BuscarPorId(xcodigo);
            if (doenca != null){
                txtNome.setText(doenca.getNome());
                for(int i = 0; i < listaCategoriaDoenca.size(); i++){
                    if (listaCategoriaDoenca.get(i).getCodigo() == doenca.getCategoriadoenca().getCodigo()){
                        cmbCategoriaDoenca.setSelectedIndex(i);
                    }
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro de sql: " + ex.toString());
        }
    }
    
    private boolean validaDados(){
        if ("".equals(txtNome.getText())){
            JOptionPane.showMessageDialog(null, "Nome não informado");
            txtNome.grabFocus();
            return false;
        }
        else
            if (cmbCategoriaDoenca.getSelectedIndex() < 0){
                JOptionPane.showMessageDialog(null, "Categoria de Doença não selecionada");
                cmbCategoriaDoenca.grabFocus();
                return false;
            } 
            else
                return true;
    }
    
    private void gravar(){
        Doenca doencaEntidade = new Doenca();
        doencaEntidade.setCodigo(xcodigo);
        doencaEntidade.setCategoriadoenca((CategoriaDoenca)cmbCategoriaDoenca.getSelectedItem());
        doencaEntidade.setNome(txtNome.getText());
        try {
            daoDoenca.ValidaDados(doencaEntidade);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro de sql: " + ex.toString());
        }
    }
    
    private void PreencherCategoriaDoenca(){
        
        try {
            cmbCategoriaDoenca.removeAllItems();
            listaCategoriaDoenca = daoCategDoenca.ListarTodos();
            for (int i = 0; i < listaCategoriaDoenca.size(); i++){
                cmbCategoriaDoenca.addItem(listaCategoriaDoenca.get(i).toString());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro de sql: " + ex.toString());
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGravar;
    private javax.swing.JComboBox<Object> cmbCategoriaDoenca;
    private javax.swing.JLabel lblCategoriaDoenca;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
