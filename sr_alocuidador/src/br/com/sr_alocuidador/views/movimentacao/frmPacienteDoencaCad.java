/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sr_alocuidador.views.movimentacao;

import br.com.sr_alocuidador.daos.DoencaDAO;
import br.com.sr_alocuidador.daos.PacienteDAO;
import br.com.sr_alocuidador.daos.PacienteDoencaDAO;
import br.com.sr_alocuidador.models.Doenca;
import br.com.sr_alocuidador.models.PacienteDoenca;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author plima
 */
public class frmPacienteDoencaCad extends javax.swing.JDialog {

    private List<Doenca> listaDoenca = new ArrayList<>();
    
    public int xcodigo;
    public int xcodpaciente; 
    private PacienteDoencaDAO daoPacienteDoenca;
    private DoencaDAO daoDoenca;
    private PacienteDAO daoPaciente;
    
    public frmPacienteDoencaCad(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDoenca = new javax.swing.JLabel();
        cmbDoenca = new javax.swing.JComboBox<>();
        lblDescricao = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        btnGravar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Doenças do Paciente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDoenca.setText("Doença:");
        getContentPane().add(lblDoenca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        cmbDoenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDoencaActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDoenca, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 350, -1));

        lblDescricao.setText("Descrição:");
        getContentPane().add(lblDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));
        getContentPane().add(txtDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 350, -1));

        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGravar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        setSize(new java.awt.Dimension(399, 184));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            daoPacienteDoenca = new PacienteDoencaDAO();
            daoDoenca = new DoencaDAO();
            daoPaciente = new PacienteDAO();
            preencheDoenca();
            pesquisar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro encontrado: " + ex.toString());
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        if (validaDados()){
            try {
                gravar();
                JOptionPane.showMessageDialog(null, "Registro gravado com sucesso.");
                this.setVisible(false);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao gravar o registro: "  + ex.toString());
            }
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void cmbDoencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDoencaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDoencaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPacienteDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPacienteDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPacienteDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPacienteDoencaCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmPacienteDoencaCad dialog = new frmPacienteDoencaCad(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGravar;
    private javax.swing.JComboBox<Object> cmbDoenca;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblDoenca;
    private javax.swing.JTextField txtDescricao;
    // End of variables declaration//GEN-END:variables

    private boolean validaDados(){
        
        if (cmbDoenca.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "Hospital não informado.");
            return false;
        } else if ("".equals(txtDescricao.getText())){
            JOptionPane.showMessageDialog(null, "Data não informada.");
            return false;
        } else return true;        
        
    }
    
    private void gravar() throws SQLException{
        PacienteDoenca c = new PacienteDoenca();
        c.setCodigo(xcodigo);
        c.setPaciente(daoPaciente.buscarPorId(xcodpaciente));
        c.setDoenca(((Doenca)cmbDoenca.getSelectedItem()));
        c.setDescricao(txtDescricao.getText());
        daoPacienteDoenca.validaDados(c);        
    }
    
    private void pesquisar() throws SQLException {
        PacienteDoenca c = daoPacienteDoenca.buscarPorId(xcodigo);
        if (c != null){
            for(int i = 0; i < listaDoenca.size(); i++){
                if (listaDoenca.get(i).getCodigo() == c.getDoenca().getCodigo()){
                    cmbDoenca.setSelectedIndex(i);
                }
            }
            
            txtDescricao.setText(c.getDescricao());
        }
    }

    private void preencheDoenca() throws SQLException {
        cmbDoenca.removeAllItems();
        listaDoenca = daoDoenca.ListarTodos(0);
        for(Doenca c : listaDoenca){
            cmbDoenca.addItem(c);
        }
        cmbDoenca.setSelectedIndex(-1);
    }
}
