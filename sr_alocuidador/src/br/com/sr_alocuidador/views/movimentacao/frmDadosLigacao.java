/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sr_alocuidador.views.movimentacao;

import br.com.sr_alocuidador.daos.LigacaoItemDAO;
import br.com.sr_alocuidador.daos.LigacaoProgramadaDAO;
import br.com.sr_alocuidador.daos.UsuarioDAO;
import br.com.sr_alocuidador.helpers.Uteis;
import br.com.sr_alocuidador.models.Ligacao;
import br.com.sr_alocuidador.models.LigacaoItem;
import br.com.sr_alocuidador.models.Usuario;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author plima
 */
public class frmDadosLigacao extends javax.swing.JDialog {

    public String xcodligacao;
    private LigacaoProgramadaDAO daoLigacaoProgramada;
    private UsuarioDAO daoUsuario;
    private LigacaoItemDAO daoLigacaoItem;
    
    public frmDadosLigacao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCodigoLigacao = new javax.swing.JLabel();
        txtCodLigacao = new javax.swing.JTextField();
        lblPaciente = new javax.swing.JLabel();
        txtNomePaciente = new javax.swing.JTextField();
        lblLigador = new javax.swing.JLabel();
        txtQuemLigou = new javax.swing.JTextField();
        txtPeriodoInicial = new javax.swing.JTextField();
        lblPeriodo = new javax.swing.JLabel();
        txtPeriodoFinal = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        lblObservacao = new javax.swing.JLabel();
        pnlQuestionario = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblQuestionario = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dados da Ligação");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblCodigoLigacao.setText("Código Ligação:");

        txtCodLigacao.setEditable(false);

        lblPaciente.setText("Paciente:");

        txtNomePaciente.setEditable(false);

        lblLigador.setText("Quem Ligou:");

        txtQuemLigou.setEditable(false);

        txtPeriodoInicial.setEditable(false);

        lblPeriodo.setText("Período:");

        txtPeriodoFinal.setEditable(false);

        txtStatus.setEditable(false);

        lblStatus.setText("Status:");

        txtObservacao.setEditable(false);
        txtObservacao.setColumns(20);
        txtObservacao.setRows(5);
        jScrollPane1.setViewportView(txtObservacao);

        lblObservacao.setText("Observação:");

        pnlQuestionario.setBorder(javax.swing.BorderFactory.createTitledBorder("Questionário"));

        tblQuestionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Pergunta", "Resposta", "Observação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblQuestionario);

        javax.swing.GroupLayout pnlQuestionarioLayout = new javax.swing.GroupLayout(pnlQuestionario);
        pnlQuestionario.setLayout(pnlQuestionarioLayout);
        pnlQuestionarioLayout.setHorizontalGroup(
            pnlQuestionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        pnlQuestionarioLayout.setVerticalGroup(
            pnlQuestionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuestionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(txtQuemLigou, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtCodLigacao, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(lblCodigoLigacao)
                                            .addGap(93, 93, 93)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPaciente)
                                        .addComponent(txtNomePaciente))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLigador)
                                .addGap(202, 202, 202)
                                .addComponent(lblPeriodo)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStatus)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 92, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblObservacao)
                        .addGap(0, 703, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addComponent(pnlQuestionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoLigacao)
                    .addComponent(lblPaciente))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodLigacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLigador)
                    .addComponent(lblPeriodo)
                    .addComponent(lblStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuemLigou, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPeriodoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPeriodoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblObservacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlQuestionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(791, 539));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        daoLigacaoProgramada = new LigacaoProgramadaDAO();
        daoUsuario = new UsuarioDAO();
        daoLigacaoItem = new LigacaoItemDAO();
        try {
            PreencheDados();
            PreencheItensRespondidos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao preencher os dados: " + ex.toString());
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDadosLigacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDadosLigacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmDadosLigacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDadosLigacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmDadosLigacao dialog = new frmDadosLigacao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCodigoLigacao;
    private javax.swing.JLabel lblLigador;
    private javax.swing.JLabel lblObservacao;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblPeriodo;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel pnlQuestionario;
    private javax.swing.JTable tblQuestionario;
    private javax.swing.JTextField txtCodLigacao;
    private javax.swing.JTextField txtNomePaciente;
    private javax.swing.JTextArea txtObservacao;
    private javax.swing.JTextField txtPeriodoFinal;
    private javax.swing.JTextField txtPeriodoInicial;
    private javax.swing.JTextField txtQuemLigou;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables

    private void PreencheDados() throws SQLException {
        
        Ligacao ligacao = daoLigacaoProgramada.buscarPorId(xcodligacao);
        Usuario usuario = daoUsuario.buscarPorId(ligacao.getUsuario().getCodigo());
        
        txtCodLigacao.setText(ligacao.getIdligacao());
        txtNomePaciente.setText(ligacao.getPaciente().getNome());
        txtQuemLigou.setText(usuario.getNome());
        txtPeriodoInicial.setText(Uteis.formatarDataHora(ligacao.getHorainicio()));
        txtPeriodoFinal.setText(Uteis.formatarDataHora(ligacao.getHorafim()));
        txtStatus.setText("R".equals(ligacao.getStatus()) ? "REALIZADA" : "NÃO REALIZADA");
        txtObservacao.setText("R".equals(ligacao.getStatus()) ? ligacao.getObservacao() : ligacao.getMotivonaorealizado());
    }

    private void PreencheItensRespondidos() throws SQLException {
        DefaultTableModel modelo = (DefaultTableModel)tblQuestionario.getModel(); 
        modelo.setNumRows(0);
        for(LigacaoItem li : daoLigacaoItem.listarItensRespondidos(xcodligacao)){
            modelo.addRow(new Object[]{
                li.getPergitem().getPergunta().getNome(),
                li.getNmresposta(),
                li.getObservacao()
            });
        }
    }
}
